- name: get rosa cluster
  ocm_cluster_info:
    name: "{{ cluster_name }}"
  register: _cluster_info

- set_fact:
    _cluster_dns: "{{ _cluster_info.cluster.name }}.{{ _cluster_info.cluster.dns.base_domain }}."

- name: list all hosted zones
  community.aws.route53_info:
    query: hosted_zone
  register: _hosted_zones
  no_log: true

  # HostedZones:
  # - CallerReference: RISWorkflow-RD:82e2a33f-ce34-425a-ad9d-2a0648c70921
  #   Config:
  #     Comment: HostedZone created by Route53 Registrar
  #     PrivateZone: false
  #   Id: /hostedzone/Z01723711DOZKPDQLY8VQ
  #   Name: mobb.cloud.
  #   ResourceRecordSetCount: 13


- name: get the specific zone
  set_fact:
    _route53_zone: "{{ (_hosted_zones | json_query(jmesquery))[0] }}"
  vars:
    jmesquery: "HostedZones[?Name == '{{ _cluster_dns }}']"

- set_fact:
    _route53_zone_id: "{{ _route53_zone.Id | replace('/hostedzone/','') }}"

- name: create route53 vpc association
  route53_zone:
    zone: "{{ _cluster_dns }}"
    hosted_zone_id: "{{ _route53_zone_id }}"
    vpcs:
      - id: "{{ egress_vpc_id }}"
        region: "{{ rosa_region }}"
      - id: "{{ vpc_id }}"
        region: "{{ rosa_region }}"


# todo - create inbound resolver endpoint
# https://docs.aws.amazon.com/cli/latest/reference/route53resolver/create-resolver-endpoint.html
