- name: get used oidc managed configs
  shell: |
    rosa list clusters -o json | jq -r '.[] | select(.hypershift.enabled).aws.sts.oidc_endpoint_url | split("/")[-1]'
  register: _oidc_configs_used
  changed_when: false
  no_log: true

- name: get all oidc managed configs
  shell: |
    rosa list oidc-config -o json | jq -r '.[] | select(.managed).id'
  register: _oidc_configs_all
  changed_when: false
  no_log: true

- name: get unused oidc managed configs
  set_fact:
    _oidc_configs_unused: "{{ _oidc_configs_all.stdout_lines | difference(_oidc_configs_used.stdout_lines) }}"
  changed_when: false
  no_log: true

- name: get a random unused config
  set_fact:
    _oidc_id: "{{ _oidc_configs_unused | random }}"
  when:
    - _oidc_configs_unused | length > 0

- name: create oidc config
  shell: |
    rosa create oidc-config --mode auto --managed --yes > /dev/null && \
    rosa list oidc-config -o json | jq -r '.[] | select(.last_used_timestamp == null).id'
  register: _oidc_config
  when:
    - _oidc_id is undefined

- set_fact:
    _oidc_id: "{{ _oidc_config.stdout }}"
  when:
    - _oidc_id is undefined
